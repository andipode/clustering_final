name: clustering_multistep

python_env:

entry_points:
    load_newmongo:
        parameters:
            out_csv: {type: str, default: newmongo.csv}
        command: python load_newmongo.py --out_csv {out_csv}

    etl_oldmongo:
        parameters:
            mongo_folder: {type: str, default: oldmongo/}
            smart_meter_description_csv: {type: str, default: smart_meter_description.csv}
            resolution: {type: str, default: 60}
        command: python etl_oldmongo.py --mongo_folder {mongo_folder} --smart_meter_description_csv {smart_meter_description_csv} --resolution {resolution}

    etl_sql:
        parameters:
            sql_folder: {type: str, default: sql/}
            smart_meter_description_csv: {type: str, default: smart_meter_description.csv}
            resolution: {type: str, default: 60}
        command: python etl_sql.py --sql_folder {sql_folder} --smart_meter_description_csv {smart_meter_description_csv} --resolution {resolution}

    etl_newmongo:
        parameters:
            load_new: {type: str, default: False}
            mongo_csv: {type: str, default: newmongo.csv}
            smart_meter_description_csv: {type: str, default: smart_meter_description.csv}
            resolution: {type: str, default: 60}
        command: python etl_newmongo.py --load_new {load_new} --mongo_csv {mongo_csv} --smart_meter_description_csv {smart_meter_description_csv} --resolution {resolution}

    harmonization:
        parameters:
            sql_csv: {type: str, default: clean_sql.csv}
            oldmongo_csv: {type: str, default: clean_oldmongo.csv}
            newmongo_csv: {type: str, default: clean_newmongo.csv}
            out_csv: {type: str, default: harmonized.csv}
            compute_dtw: {type: str, default: False}
        command: python harmonization.py --sql_csv {sql_csv} --oldmongo_csv {oldmongo_csv} --newmongo_csv {newmongo_csv} --out_csv {out_csv} --compute_dtw {compute_dtw}
        
    clustering:
        parameters:
            in_csv: {type: str, default: harmonized.csv}
            model: {type: str, default: kmeans}
            distance_metric: {type: str, default: euclidean}
            number_of_clusters: {type: str, default: 10}
            season: {type: str, default: all}
        command: python clustering.py --in_csv {in_csv} --model {model} --distance_metric {distance_metric} --number_of_clusters {number_of_clusters} --season {season}
